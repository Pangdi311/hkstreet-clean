<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no">
<link href="https://api.mapbox.com/mapbox-gl-js/v2.7.0/mapbox-gl.css" rel="stylesheet">
<script src="https://api.mapbox.com/mapbox-gl-js/v2.7.0/mapbox-gl.js"></script>



<style>

body {
  margin: 0;
  padding: 0;
}

/**
* on the page */
#map-1 {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 100%;
}

/**
* Set rules for how the map overlays
* (information box and legend) will be displayed
* on the page. */
.map-overlay-1 {
  position: absolute;
  bottom: 0;
  right: 0;
  background: #fff;
  margin-right: 20px;
  font-family: 'Helvetica Neue', Arial, Helvetica, sans-serif;
  overflow: auto;
  border-radius: 3px;
}

#legend {
  padding: 10px;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
  line-height: 18px;
  height: 54px;
  margin-bottom: 40px;
  border-radius: 8px;
  width: 120px;
  background-color: #2a3f4d;
  color: white;
  opacity: 0.8;
  font-size: 12px;
}

.legend-key {
  display: inline-block;
  border-radius: 20%;
  width: 10px;
  height: 10px;
  margin-right: 5px;
}


 .map-opacity .map-overlay-inner {
        background-color: #2a3f4d;
        color: white;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
        border-radius: 3px;
        padding: 10px;
        margin-bottom: 10px;
        margin-left: 20px;
    }

    .map-opacity label {
        display: block;
        margin: 0 0 10px;
    }

    .map-opacity input {
        background-color: transparent;
        display: inline-block;
        width: 100%;
        position: relative;
        margin: 0;
        cursor: ew-resize;
    }


   .map-opacity {
        font: 16px 'Helvetica Neue', Arial, Helvetica, sans-serif;
        position: absolute;
        opacity: 0.8;
        width: 25%;
        top: 0;
        left: 0;
        padding: 10px;
    }

.popup .mapboxgl-popup-content {
  background-color: #2A3F4D;
  opacity: 0.95;
  color: white;
}

</style>
</head>
<body>
<div id="map-1"></div>
<div class="map-overlay-1" id="legend"></div>

<div class="map-opacity top">
    <div class="map-overlay-inner">
        <label>Map overlay opacity: <span id="slider-value">50%</span></label>
        <input id="slider" type="range" min="0" max="100" step="0" value="50">
    </div>
</div>


<script>
mapboxgl.accessToken =
  "pk.eyJ1IjoiZHBhbmczMTEiLCJhIjoiY2tidmNld2cyMDA5djJwbXYzZjZsNTB0OSJ9.hvW536UZKn2wDDH6yDjJ2g";

const bounds = [
  [113.755, 22.13], // Southwest coordinates
  [114.415, 22.57] // Northeast coordinates
];

const map = new mapboxgl.Map({
  container: "map-1",
  style: "mapbox://styles/dpang311/ck21xo59h0cht1cmm2wjrmoki",
  center: [114.16, 22.295],
  zoom: 12.8,
  minZoom: 10,
  maxBounds: bounds
});

map.on("load", () => {
  // define layer names
  const layers = ["Sino-Tibetan", "Indo-European", "Mixed"];
  const colors = ["#4589ff", "#d2a106", "#6fdc8c"];

  // create legend
  const legend = document.getElementById("legend");

  layers.forEach((layer, i) => {
    const color = colors[i];
    const item = document.createElement("div");
    const key = document.createElement("span");
    key.className = "legend-key";
    key.style.backgroundColor = color;

    const value = document.createElement("span");
    value.innerHTML = `${layer}`;
    item.appendChild(key);
    item.appendChild(value);
    legend.appendChild(item);
  });

  // Add sino-tibetan
  map.addSource("chi", {
    type: "geojson",
    data:
      "https://raw.githubusercontent.com/Pangdi311/hkstreets/main/chi.geojson"
  });

  map.addLayer({
    source: "chi",
    id: "chi-layer",
    type: "line",
    layout: {
      "line-join": "round",
      "line-cap": "round"
    },

    paint: {
      "line-color": "#4589ff",
      "line-width": 1
    }
  });

  // Add indo-euro
  map.addSource("eng", {
    type: "geojson",
    data:
      "https://raw.githubusercontent.com/Pangdi311/hkstreets/main/eng.geojson"
  });

  map.addLayer({
    source: "eng",
    id: "eng-layer",
    type: "line",
    layout: {
      "line-join": "round",
      "line-cap": "round"
    },

    paint: {
      "line-color": " #d2a106",
      "line-width": 1
    }
  });

  // Add mixed
  map.addSource("mixed", {
    type: "geojson",
    data:
      "https://raw.githubusercontent.com/Pangdi311/hkstreets/main/mix.geojson"
  });

  map.addLayer({
    source: "mixed",
    id: "mixed-layer",
    type: "line",
    layout: {
      "line-join": "round",
      "line-cap": "round"
    },

    paint: {
      "line-color": "#6fdc8c",
      "line-width": 1
    }
  });

  //===============
  
  //add labels for mixed
  const popupmix = new mapboxgl.Popup({
    closeButton: false,
    closeOnClick: false,
    className:"popup"
  });

  map.on("mouseenter", "mixed-layer", (e) => {
    // Change the cursor style as a UI indicator.
    map.getCanvas().style.cursor = "pointer";

    // Populate the popup and set its coordinates
    // based on the feature found.
    popupmix
      .setLngLat(e.lngLat)
      .setHTML(
        '<strong><p style="color:#2db952; margin-top:0px">Mixed</p></strong>' +
          e.features[0].properties.name
      )
      .addTo(map);
  });

  map.on("mouseleave", "mixed-layer", () => {
    map.getCanvas().style.cursor = "";
    popupmix.remove();
  });

  //add labels for chi
  const popupchi = new mapboxgl.Popup({
    closeButton: false,
    closeOnClick: false,
    className:"popup"
  });

  map.on("mouseenter", "chi-layer", (e) => {
    // Change the cursor style as a UI indicator.
    map.getCanvas().style.cursor = "pointer";

    // Populate the popup and set its coordinates
    // based on the feature found.
    popupchi
      .setLngLat(e.lngLat)
      .setHTML(
        '<strong><p style="color:#4589ff; margin-top:0px">Chinese</p></strong>' +
          e.features[0].properties.name
      )
      .addTo(map);
  });

  map.on("mouseleave", "chi-layer", () => {
    map.getCanvas().style.cursor = "";
    popupchi.remove();
  });

  //add labels for indo-euro
  const popupeng = new mapboxgl.Popup({
    closeButton: false,
    closeOnClick: false,
    className:"popup"
  });

  map.on("mouseenter", "eng-layer", (e) => {
    // Change the cursor style as a UI indicator.
    map.getCanvas().style.cursor = "pointer";

    // Populate the popup and set its coordinates
    // based on the feature found.
    popupeng
      .setLngLat(e.lngLat)
      .setHTML(
        '<strong><p style="color:#d2a106; margin-top:0px">English</p></strong>' +
          e.features[0].properties.name
      )
      .addTo(map);
  });

  map.on("mouseleave", "eng-layer", () => {
    map.getCanvas().style.cursor = "";
    popupeng.remove();
  });
  
  const slider = document.getElementById("slider");
const sliderValue = document.getElementById("slider-value");

  map.addSource("kln", {
    type: "raster",
    url: "mapbox://dpang311.9h6c64v4"
  },
   "hki", {
    type: "raster",
    url: "dpang311.dlkc2757"
  }
               
               );
  map.addLayer({
    id: "kln",
    source: "kln",
    type: "raster"
  });

  slider.addEventListener("input", (e) => {
    // Adjust the layers opacity. layer here is arbitrary - this could
    // be another layer name found in your style or a custom layer
    // added on the fly using `addSource`.
    map.setPaintProperty(
      "kln",
      "raster-opacity",
      parseInt(e.target.value, 10) / 100
    );

    // Value indicator
    sliderValue.textContent = e.target.value + "%";
  });
  
  
   map.addSource("hki", {
    type: "raster",
    url: "mapbox://dpang311.dlkc2757"
  });
  map.addLayer({
    id: "hki",
    source: "hki",
    type: "raster"
  });

  slider.addEventListener("input", (e) => {
    // Adjust the layers opacity. layer here is arbitrary - this could
    // be another layer name found in your style or a custom layer
    // added on the fly using `addSource`.
    map.setPaintProperty(
      "hki",
      "raster-opacity",
      parseInt(e.target.value, 10) / 100
    );

    // Value indicator
    sliderValue.textContent = e.target.value + "%";
  });
  
  
});


</script>
 
</body>
</html>
